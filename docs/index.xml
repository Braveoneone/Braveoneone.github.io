<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Yiyi&#39;s blog</title>
    <link>http://Braveoneone.github.io/</link>
    <description>Recent content on Yiyi&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 06 Sep 2022 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="http://Braveoneone.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>About</title>
      <link>http://Braveoneone.github.io/about/</link>
      <pubDate>Sun, 20 Aug 2017 21:38:52 +0800</pubDate>
      
      <guid>http://Braveoneone.github.io/about/</guid>
      
        <description>&lt;p&gt;Hugo is a static site engine written in Go.&lt;/p&gt;
&lt;p&gt;It makes use of a variety of open source projects including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spf13/cobra&#34;&gt;Cobra&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spf13/viper&#34;&gt;Viper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spf13/jWalterWeatherman&#34;&gt;J Walter Weatherman&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spf13/cast&#34;&gt;Cast&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Learn more and contribute on &lt;a href=&#34;https://github.com/gohugoio&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>Github Page 搭建个人主页</title>
      <link>http://Braveoneone.github.io/post/github-hugo/</link>
      <pubDate>Tue, 06 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>http://Braveoneone.github.io/post/github-hugo/</guid>
      
        <description>&lt;p&gt;GitHub Pages 是一个静态站点托管服务，直接将个人、组织或项目的页面托管于 GitHub 库或仓库 (repository) 中。
Hugo 是一个用 Go 语言编写的静态站点生成器，它针对速度、易用性和可配置性进行了优化，快速灵活。&lt;/p&gt;
&lt;h2 id=&#34;error大集合&#34;&gt;error大集合&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;error: 源引用规格 master 没有匹配&lt;/em&gt;
&lt;em&gt;error: 推送一些引用到 &amp;lsquo;github.com:‘&lt;/em&gt;
解决：
git commit -m &amp;quot;&amp;quot;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;You&amp;rsquo;ve added another git repository inside your current repository.&lt;/em&gt;
解决：
git rm -r &amp;ndash;cached log  //删除对log的track
git submodule add url //添加log到子目录
我这里是 git submodule add &amp;ndash;depth=1 &lt;a href=&#34;https://github.com/xianmin/hugo-theme-jane.git&#34;&gt;https://github.com/xianmin/hugo-theme-jane.git&lt;/a&gt; themes/jane   &amp;ndash;depth&lt;/p&gt;
&lt;p&gt;&lt;em&gt;error: build and deploy all jobs have failed&lt;/em&gt;
解决：生成编译文件
hugo -d docs
再在仓库的setting中选择docs
该方式的优点是将源文件与编译文件分开&lt;/p&gt;
&lt;p&gt;&lt;em&gt;fatal: unable to access &amp;ldquo;&amp;hellip;github&amp;rdquo;&lt;/em&gt;
解决：用SSH方式连接，不要用HTTP。
同时注意SSH是否已经与另一个账号连接，若有则需要删除。&lt;/p&gt;
&lt;h1 id=&#34;其他命令&#34;&gt;其他命令&lt;/h1&gt;
&lt;p&gt;git command
git remote -v //查看远程仓库
git init //初始化仓库
git clean
git add .
git commit -m &amp;ldquo;doc&amp;rdquo;
git push origin master&lt;/p&gt;
&lt;p&gt;hugo command
hugo new site site_name
可得到如下目录结构
personal-site
├── archetypes
├── config.toml   //Hugo的配置文档
├── content       //存放所有Markdown格式的文章
├── data
├── layouts
├── static
└── themes        //存放下载的主题
编译网站
hugo -d
会在/public中生成网页文件&lt;/p&gt;
</description>
      
    </item>
    
  </channel>
</rss>
